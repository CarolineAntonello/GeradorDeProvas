/*
Deployment script for DBGeradorDeProvas

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "DBGeradorDeProvas"
:setvar DefaultFilePrefix "DBGeradorDeProvas"
:setvar DefaultDataPath "C:\Users\ndduser\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\mssqllocaldb"
:setvar DefaultLogPath "C:\Users\ndduser\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\mssqllocaldb"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)]
    ON 
    PRIMARY(NAME = [$(DatabaseName)], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_Primary.mdf')
    LOG ON (NAME = [$(DatabaseName)_log], FILENAME = N'$(DefaultLogPath)$(DefaultFilePrefix)_Primary.ldf') COLLATE SQL_Latin1_General_CP1_CI_AS
GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY NONE,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET FILESTREAM(NON_TRANSACTED_ACCESS = OFF),
                CONTAINMENT = NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CREATE_STATISTICS ON(INCREMENTAL = OFF),
                MEMORY_OPTIMIZED_ELEVATE_TO_SNAPSHOT = OFF,
                DELAYED_DURABILITY = DISABLED 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (QUERY_CAPTURE_MODE = ALL, FLUSH_INTERVAL_SECONDS = 900, INTERVAL_LENGTH_MINUTES = 60, MAX_PLANS_PER_QUERY = 200, CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367), MAX_STORAGE_SIZE_MB = 100) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE = OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE SCOPED CONFIGURATION SET MAXDOP = 0;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET MAXDOP = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET LEGACY_CARDINALITY_ESTIMATION = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET LEGACY_CARDINALITY_ESTIMATION = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET PARAMETER_SNIFFING = ON;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET PARAMETER_SNIFFING = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET QUERY_OPTIMIZER_HOTFIXES = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET QUERY_OPTIMIZER_HOTFIXES = PRIMARY;
    END


GO
USE [$(DatabaseName)];


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
PRINT N'Creating [dbo].[TBAlternativa]...';


GO
CREATE TABLE [dbo].[TBAlternativa] (
    [Id]           INT            IDENTITY (1, 1) NOT NULL,
    [Descricao]    NVARCHAR (MAX) NOT NULL,
    [IsVerdadeira] BIT            NOT NULL,
    [QuestaoId]    INT            NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[TBDisciplina]...';


GO
CREATE TABLE [dbo].[TBDisciplina] (
    [Id]             INT          IDENTITY (1, 1) NOT NULL,
    [NomeDisciplina] VARCHAR (50) NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[TBMateria]...';


GO
CREATE TABLE [dbo].[TBMateria] (
    [Id]           INT           IDENTITY (1, 1) NOT NULL,
    [DisciplinaId] INT           NOT NULL,
    [SerieId]      INT           NOT NULL,
    [NomeMateria]  NVARCHAR (50) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[TBProva]...';


GO
CREATE TABLE [dbo].[TBProva] (
    [Id]                 INT IDENTITY (1, 1) NOT NULL,
    [SerieId]            INT NOT NULL,
    [DisciplinaId]       INT NOT NULL,
    [MateriaId]          INT NOT NULL,
    [QuantidadeQuestoes] INT NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[TBQuestao]...';


GO
CREATE TABLE [dbo].[TBQuestao] (
    [Id]        INT            IDENTITY (1, 1) NOT NULL,
    [Pergunta]  NVARCHAR (MAX) NOT NULL,
    [Bimestre]  INT            NOT NULL,
    [MateriaId] INT            NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[TBQuestaoProva]...';


GO
CREATE TABLE [dbo].[TBQuestaoProva] (
    [Id]        INT IDENTITY (1, 1) NOT NULL,
    [QuestaoId] INT NULL,
    [ProvaId]   INT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[TBSerie]...';


GO
CREATE TABLE [dbo].[TBSerie] (
    [Id]        INT           IDENTITY (1, 1) NOT NULL,
    [NomeSerie] NVARCHAR (50) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[FK_TBMateria_TBDisciplina]...';


GO
ALTER TABLE [dbo].[TBMateria]
    ADD CONSTRAINT [FK_TBMateria_TBDisciplina] FOREIGN KEY ([DisciplinaId]) REFERENCES [dbo].[TBDisciplina] ([Id]);


GO
PRINT N'Creating [dbo].[FK_TBMateria_TBSerie]...';


GO
ALTER TABLE [dbo].[TBMateria]
    ADD CONSTRAINT [FK_TBMateria_TBSerie] FOREIGN KEY ([SerieId]) REFERENCES [dbo].[TBSerie] ([Id]);


GO
PRINT N'Creating [dbo].[FK_TBProva_Serie]...';


GO
ALTER TABLE [dbo].[TBProva]
    ADD CONSTRAINT [FK_TBProva_Serie] FOREIGN KEY ([SerieId]) REFERENCES [dbo].[TBSerie] ([Id]);


GO
PRINT N'Creating [dbo].[FK_TBProva_Disciplina]...';


GO
ALTER TABLE [dbo].[TBProva]
    ADD CONSTRAINT [FK_TBProva_Disciplina] FOREIGN KEY ([DisciplinaId]) REFERENCES [dbo].[TBDisciplina] ([Id]);


GO
PRINT N'Creating [dbo].[FK_TBProva_Materia]...';


GO
ALTER TABLE [dbo].[TBProva]
    ADD CONSTRAINT [FK_TBProva_Materia] FOREIGN KEY ([MateriaId]) REFERENCES [dbo].[TBMateria] ([Id]);


GO
PRINT N'Creating [dbo].[FK_TBQuestao_Materia]...';


GO
ALTER TABLE [dbo].[TBQuestao]
    ADD CONSTRAINT [FK_TBQuestao_Materia] FOREIGN KEY ([MateriaId]) REFERENCES [dbo].[TBMateria] ([Id]);


GO
PRINT N'Creating [dbo].[FK_TBQuestaoProva_Questao]...';


GO
ALTER TABLE [dbo].[TBQuestaoProva]
    ADD CONSTRAINT [FK_TBQuestaoProva_Questao] FOREIGN KEY ([QuestaoId]) REFERENCES [dbo].[TBQuestao] ([Id]);


GO
PRINT N'Creating [dbo].[FK_TBQuestaoProva_Prova]...';


GO
ALTER TABLE [dbo].[TBQuestaoProva]
    ADD CONSTRAINT [FK_TBQuestaoProva_Prova] FOREIGN KEY ([ProvaId]) REFERENCES [dbo].[TBProva] ([Id]);


GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'b5862f13-8128-48d3-bef3-a8cdda4ba59c')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('b5862f13-8128-48d3-bef3-a8cdda4ba59c')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '29d35aa1-a795-40ad-84d9-a32b3b17a452')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('29d35aa1-a795-40ad-84d9-a32b3b17a452')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '5b2d7b98-91a4-4c99-ba97-9b0787b6f38a')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('5b2d7b98-91a4-4c99-ba97-9b0787b6f38a')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '1b0fdc37-7890-413c-bc6a-7537d8ac37ce')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('1b0fdc37-7890-413c-bc6a-7537d8ac37ce')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'cf35d3b1-fbb4-4e86-bd49-44815b28b87d')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('cf35d3b1-fbb4-4e86-bd49-44815b28b87d')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '2587d8ac-0e04-43a2-a25b-913aa7fabf99')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('2587d8ac-0e04-43a2-a25b-913aa7fabf99')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '31efffd7-a2a3-45e6-ba17-e52b2583e729')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('31efffd7-a2a3-45e6-ba17-e52b2583e729')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '8ebe265b-2e57-4122-89c2-68262163071d')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('8ebe265b-2e57-4122-89c2-68262163071d')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '707ad57a-19d2-46a2-a633-509d27c8c2de')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('707ad57a-19d2-46a2-a633-509d27c8c2de')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'e1032b56-a37a-4d62-b979-bd66c10df18a')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('e1032b56-a37a-4d62-b979-bd66c10df18a')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '4c23fa1a-bba2-4cf4-9996-6a97bcecbc6b')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('4c23fa1a-bba2-4cf4-9996-6a97bcecbc6b')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '085ec330-55f7-4a2d-8265-10cdbd2f4f95')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('085ec330-55f7-4a2d-8265-10cdbd2f4f95')

GO

GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
PRINT N'Update complete.';


GO
